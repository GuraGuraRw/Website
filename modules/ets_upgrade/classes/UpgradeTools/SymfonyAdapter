<?php
/**
 * Copyright ETS Software Technology Co., Ltd
 *
 * NOTICE OF LICENSE
 *
 * This file is not open source! Each license that you purchased is only available for 1 website only.
 * If you want to use this file on more websites (or projects), you need to purchase additional licenses.
 * You are not allowed to redistribute, resell, lease, license, sub-license or offer our resources to any third party.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future.
 *
 * @author ETS Software Technology Co., Ltd
 * @copyright  ETS Software Technology Co., Ltd
 * @license    Valid for 1 website (or project) for each purchase of license
*/

namespace PrestaShop\Module\EtsAutoUpgrade\UpgradeTools;

/**
 * TODO: Create a class for 1.7 env and another one for 1.6 ?
*/
class SymfonyAdapter
{
    /**
     * @var string Version on which PrestaShop is being upgraded
    */
    private $destinationPsVersion;

    public function __construct($destinationPsVersion)
    {
        $this->destinationPsVersion = $destinationPsVersion;
    }

    public function runSchemaUpgradeCommand()
    {
        if (version_compare($this->destinationPsVersion, '1.7.1.1', '>=')) {
            $schemaUpgrade = new \PrestaShopBundle\Service\Database\Upgrade();
            $outputCommand = 'prestashop:schema:update-without-foreign';
        } else {
            $schemaUpgrade = new \PrestaShopBundle\Service\Cache\Refresh();
            $outputCommand = 'doctrine:schema:update';
        }

        $schemaUpgrade->addDoctrineSchemaUpdate();
        $output = $schemaUpgrade->execute();

        return $output[$outputCommand];
    }

    /**
     * Return the AppKernel, after initialization
     *
     * @return \AppKernel
    */
    public function initAppKernel()
    {
        global $kernel;
        if (!$kernel instanceof \AppKernel) {
            require_once _PS_ROOT_DIR_ . '/app/AppKernel.php';
            $env = (true == _PS_MODE_DEV_) ? 'dev' : 'prod';
            $kernel = new \AppKernel($env, _PS_MODE_DEV_);
            if (method_exists($kernel, 'loadClassCache')) { // This method has been deleted in Symfony 4.x
                $kernel->loadClassCache();
            }
            $kernel->boot();
        }

        return $kernel;
    }
}
